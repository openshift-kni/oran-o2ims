//go:build !ignore_autogenerated

/*
SPDX-FileCopyrightText: Red Hat

SPDX-License-Identifier: Apache-2.0
*/

// Code generated by controller-gen. DO NOT EDIT.

package common

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthClientConfig) DeepCopyInto(out *AuthClientConfig) {
	*out = *in
	if in.BasicAuthSecret != nil {
		in, out := &in.BasicAuthSecret, &out.BasicAuthSecret
		*out = new(string)
		**out = **in
	}
	if in.OAuthClientConfig != nil {
		in, out := &in.OAuthClientConfig, &out.OAuthClientConfig
		*out = new(OAuthClientConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.TLSConfig != nil {
		in, out := &in.TLSConfig, &out.TLSConfig
		*out = new(TLSConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthClientConfig.
func (in *AuthClientConfig) DeepCopy() *AuthClientConfig {
	if in == nil {
		return nil
	}
	out := new(AuthClientConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OAuthClientConfig) DeepCopyInto(out *OAuthClientConfig) {
	*out = *in
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OAuthClientConfig.
func (in *OAuthClientConfig) DeepCopy() *OAuthClientConfig {
	if in == nil {
		return nil
	}
	out := new(OAuthClientConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSConfig) DeepCopyInto(out *TLSConfig) {
	*out = *in
	if in.SecretName != nil {
		in, out := &in.SecretName, &out.SecretName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSConfig.
func (in *TLSConfig) DeepCopy() *TLSConfig {
	if in == nil {
		return nil
	}
	out := new(TLSConfig)
	in.DeepCopyInto(out)
	return out
}
