resources:
# All RBAC will be applied under this service account in
# the deployment namespace. You may comment out this resource
# if your manager will use a service account that exists at
# runtime. Be sure to update RoleBinding and ClusterRoleBinding
# subjects if changing service account names.
- service_account.yaml
- role.yaml
- role_binding.yaml
- leader_election_role.yaml
- leader_election_role_binding.yaml
- metrics_service.yaml
- metrics_service_clusterrole.yaml
# Pre-canned roles to allow binding to users that require specific access to our API endpoints
- oran_o2ims_user_roles.yaml
# Pre-canned role bindings that map to groups names that can be used as OAuth "roles" on the authorization server.
- oran_o2ims_oauth_role_bindings.yaml
# Pre-canned roles to allow binding to users that require specific access to our CRs
# (uncomment these lines to have RBAC roles created to test access to our CRs... similar ones
#  get created if testing with `make bundle-run`, therefore they are unneeded by default)
#- o2ims.oran.openshift.io_inventories_editor_role.yaml
#- o2ims.oran.openshift.io_inventories_viewer_role.yaml
#- o2ims.provisioning.oran.org_clustertemplate_editor_role.yaml
#- o2ims.provisioning.oran.org_clustertemplate_viewer_role.yaml
#- o2ims.provisioning.oran.org_provisioningrequest_editor_role.yaml
#- o2ims.provisioning.oran.org_provisioningrequest_viewer_role.yaml
# For each CRD, "Editor" and "Viewer" roles are scaffolded by
# default, aiding admins in cluster management. Those roles are
# not used by the Project itself. You can comment the following lines
# if you do not want those helpers be installed with your Project.
- hardwaremanagement_hardwareplugin_editor_role.yaml
- hardwaremanagement_hardwareplugin_viewer_role.yaml

