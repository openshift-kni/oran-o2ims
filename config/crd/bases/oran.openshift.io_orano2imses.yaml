---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: orano2imses.oran.openshift.io
spec:
  group: oran.openshift.io
  names:
    kind: ORANO2IMS
    listKind: ORANO2IMSList
    plural: orano2imses
    singular: orano2ims
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ORANO2IMS is the Schema for the orano2ims API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ORANO2IMSSpec defines the desired state of ORANO2IMS
            properties:
              alarmSubscriptionServerConfig:
                default:
                  enabled: true
                description: AlarmSubscriptionServerConfig contains the configuration
                  for the alarm subscription server.
                properties:
                  enabled:
                    default: true
                    description: Enabled indicates if the server should be started.
                    type: boolean
                required:
                - enabled
                type: object
              cloudId:
                type: string
              deploymentManagerServerConfig:
                default:
                  enabled: true
                description: DeploymentManagerServerConfig contains the configuration
                  for the deployment manager server.
                properties:
                  backendToken:
                    type: string
                  backendType:
                    default: regular-hub
                    enum:
                    - regular-hub
                    - global-hub
                    type: string
                  backendURL:
                    type: string
                  enabled:
                    default: true
                    description: Enabled indicates if the server should be started.
                    type: boolean
                  extensions:
                    description: This field allows the addition of extra O-Cloud information
                      for the deployment manager server.
                    items:
                      type: string
                    type: array
                required:
                - enabled
                type: object
              image:
                description: |-
                  Image is the full reference of the container image that contains the binary. This is
                  optional and the default will be the value passed to the `--image` command line flag of
                  the controller manager.
                type: string
              ingressHost:
                type: string
              metadataServerConfig:
                default:
                  enabled: true
                description: MetadataServerConfig contains the configuration for the
                  metadata server.
                properties:
                  enabled:
                    default: true
                    description: Enabled indicates if the server should be started.
                    type: boolean
                required:
                - enabled
                type: object
              resourceServerConfig:
                default:
                  enabled: true
                description: ResourceServerConfig contains the configuration for the
                  resource server.
                properties:
                  backendToken:
                    type: string
                  backendURL:
                    type: string
                  enabled:
                    default: true
                    description: Enabled indicates if the server should be started.
                    type: boolean
                  extensions:
                    description: This field allows the addition of extra O-Cloud information
                      for the resource server.
                    items:
                      type: string
                    type: array
                required:
                - enabled
                type: object
            required:
            - cloudId
            type: object
          status:
            description: ORANO2IMSStatus defines the observed state of ORANO2IMS
            properties:
              deploymentStatus:
                description: |-
                  INSERT ADDITIONAL STATUS FIELD - define observed state of cluster
                  Important: Run "make" to regenerate code after modifying this file
                properties:
                  conditions:
                    items:
                      description: "Condition contains details for one aspect of the
                        current state of this API Resource.\n---\nThis struct is intended
                        for direct use as an array at the field path .status.conditions.
                        \ For example,\n\n\n\ttype FooStatus struct{\n\t    // Represents
                        the observations of a foo's current state.\n\t    // Known
                        .status.conditions.type are: \"Available\", \"Progressing\",
                        and \"Degraded\"\n\t    // +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t
                        \   // +listType=map\n\t    // +listMapKey=type\n\t    Conditions
                        []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                        patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                        \   // other fields\n\t}"
                      properties:
                        lastTransitionTime:
                          description: |-
                            lastTransitionTime is the last time the condition transitioned from one status to another.
                            This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                          format: date-time
                          type: string
                        message:
                          description: |-
                            message is a human readable message indicating details about the transition.
                            This may be an empty string.
                          maxLength: 32768
                          type: string
                        observedGeneration:
                          description: |-
                            observedGeneration represents the .metadata.generation that the condition was set based upon.
                            For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                            with respect to the current state of the instance.
                          format: int64
                          minimum: 0
                          type: integer
                        reason:
                          description: |-
                            reason contains a programmatic identifier indicating the reason for the condition's last transition.
                            Producers of specific condition types may define expected values and meanings for this field,
                            and whether the values are considered a guaranteed API.
                            The value should be a CamelCase string.
                            This field may not be empty.
                          maxLength: 1024
                          minLength: 1
                          pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                          type: string
                        status:
                          description: status of the condition, one of True, False,
                            Unknown.
                          enum:
                          - "True"
                          - "False"
                          - Unknown
                          type: string
                        type:
                          description: |-
                            type of condition in CamelCase or in foo.example.com/CamelCase.
                            ---
                            Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                            useful (see .node.status.conditions), the ability to deconflict is important.
                            The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                          maxLength: 316
                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                          type: string
                      required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                      type: object
                    type: array
                  deploymentServerStatus:
                    type: string
                  metadataServerStatus:
                    type: string
                  resourceServerStatus:
                    type: string
                type: object
              usedServerConfig:
                properties:
                  deploymentManagerServerUsedConfig:
                    items:
                      type: string
                    type: array
                  metadataServerUsedConfig:
                    items:
                      type: string
                    type: array
                  resourceServerUsedConfig:
                    items:
                      type: string
                    type: array
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
