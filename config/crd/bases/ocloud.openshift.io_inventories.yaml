---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: inventories.ocloud.openshift.io
spec:
  group: ocloud.openshift.io
  names:
    kind: Inventory
    listKind: InventoryList
    plural: inventories
    singular: inventory
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Inventory is the Schema for the Inventory API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: InventorySpec defines the desired state of Inventory
            properties:
              alarmServerConfig:
                description: AlarmServerConfig contains the configuration for the
                  alarm server.
                type: object
              artifactsServerConfig:
                description: ArtifactsServerConfig contains the configuration for
                  the artifacts server.
                type: object
              caBundleName:
                description: |-
                  CaBundleName references a config map that contains a set of custom CA certificates to be used when communicating
                  with any outside entity (e.g., the SMO, the authorization server, etc.) that has its TLS certificate signed by
                  a non-public CA certificate.  The config map is expected to contain a single file called 'ca-bundle.crt'
                  containing all trusted CA certificates in PEM format.
                type: string
              cloudID:
                description: CloudID is the global cloud ID value used to correlate
                  the SMO inventory record with the deployed cloud instance.
                type: string
              clusterServerConfig:
                description: ClusterServerConfig contains the configuration for the
                  resource server.
                type: object
              image:
                description: |-
                  Image is the full reference of the container image that contains the binary. This is
                  optional and the default will be the value passed to the `--image` command line flag of
                  the controller manager.
                type: string
              ingress:
                description: IngressConfig defines configuration attributes related
                  to the Ingress endpoint.
                properties:
                  ingressHost:
                    description: |-
                      IngressHost defines the FQDN for the IMS endpoints.  By default, it is assumed to be "o2ims.apps.<cluster domain name>".
                      If a different DNS domain is used, then it should be customized here.
                    type: string
                  tls:
                    description: |-
                      TLS defines the TLS configuration for the IMS endpoints.  The certificate CN and DNS SAN values must match exactly
                      the value provided by the `IngressHost` value.  If the `IngressHost` value is not provided, then the CN and SAN
                      must match the expected default value.  If the TLS configuration is not provided, then the TLS configuration of
                      the default IngressController will be used.
                    properties:
                      secretName:
                        description: |-
                          SecretName specifies the name of a secret (in the current namespace) containing an X.509 certificate and
                          private key. The secret must include 'tls.key' and 'tls.crt' keys. If the certificate is signed by
                          intermediate CA(s), the full certificate chain should be included in the certificate file, with the
                          leaf certificate first and the root CA last. The certificate's Common Name (CN) or Subject Alternative
                          Name (SAN) should align with the service's fully qualified domain name to support both ingress and
                          outgoing client certificate use cases.
                        type: string
                    type: object
                type: object
              provisioningServerConfig:
                description: ProvisioningServerConfig contains the configuration for
                  the provisioning server.
                type: object
              resourceServerConfig:
                description: ResourceServerConfig contains the configuration for the
                  resource server.
                type: object
              smo:
                description: SmoConfig defines the configurable attributes to represent
                  the SMO instance
                properties:
                  oauth:
                    description: OAuthConfig defines the configurable attributes required
                      to access the OAuth2 authorization server
                    properties:
                      clientBindingClaim:
                        default: 'has(claims.cnf) ? claims.cnf[''x5t#S256''] : []'
                        description: |-
                          ClientBindingClaim represents the claim contained within the OAuth JWT token which holds the certificate SHA256
                          fingerprint.  This is expected to be a CEL mapper expression.  It should only be changed in advanced scenarios.
                        type: string
                      clientSecretName:
                        description: |-
                          ClientSecretName represents the name of a secret (in the current namespace) which contains the client-id and
                          client-secret values used by the OAuth client.
                        type: string
                      groupsClaim:
                        default: roles
                        description: |-
                          GroupsClaim represents the claim contained within the OAuth JWT token which holds the list of groups/roles. This
                          must be a list/array and not a space separated list of names.  It must also be a top level attribute rather than
                          a nested field in the JSON structure of the JWT object.
                             i.e., {"roles": ["a", "b"]} rather than {"realm": {"roles": ["a", "b"}}.
                        type: string
                      scopes:
                        description: |-
                          Scopes represents the OAuth scope values to request when acquiring a token.  Typically, this should be set to
                          "openid" in addition to any other scopes that the SMO specifically requires (e.g., "roles", "groups", etc...) to
                          authorize our requests
                        items:
                          type: string
                        type: array
                      tokenEndpoint:
                        description: |-
                          TokenEndpoint represents the API endpoint used to acquire a token (e.g., /protocol/openid-connect/token) which
                          will be appended to the base URL to form the full URL
                        type: string
                      url:
                        description: URL represents the base URL of the authorization
                          server. (e.g., https://keycloak.example.com/realms/oran)
                        type: string
                      usernameClaim:
                        default: preferred_username
                        description: UsernameClaim represents the claim contained
                          within the OAuth JWT token which holds the username
                        type: string
                    required:
                    - clientBindingClaim
                    - clientSecretName
                    - groupsClaim
                    - scopes
                    - tokenEndpoint
                    - url
                    - usernameClaim
                    type: object
                  registrationEndpoint:
                    description: RegistrationEndpoint represents the API endpoint
                      used to register the O-Cloud Manager with the SMO.
                    type: string
                  tls:
                    description: |-
                      TLSConfig defines the TLS attributes specific to enabling mTLS communication to the SMO and OAuth servers.  If
                      a configuration is provided, then an mTLS connection will be established to the destination; otherwise, a regular
                      TLS connection will be used.
                    properties:
                      secretName:
                        description: |-
                          SecretName specifies the name of a secret (in the current namespace) containing an X.509 certificate and
                          private key. The secret must include 'tls.key' and 'tls.crt' keys. If the certificate is signed by
                          intermediate CA(s), the full certificate chain should be included in the certificate file, with the
                          leaf certificate first and the root CA last. The certificate's Common Name (CN) or Subject Alternative
                          Name (SAN) should align with the service's fully qualified domain name to support both ingress and
                          outgoing client certificate use cases.
                        type: string
                    type: object
                  url:
                    description: URL represents the base URL of the SMO instance
                    type: string
                required:
                - registrationEndpoint
                - url
                type: object
            type: object
          status:
            description: InventoryStatus defines the observed state of Inventory
            properties:
              clusterID:
                description: Stores the local cluster ID used as the local Cloud ID
                  value.
                type: string
              conditions:
                description: |-
                  INSERT ADDITIONAL STATUS FIELD - define observed state of cluster
                  Important: Run "make" to regenerate code after modifying this file
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              ingressHost:
                description: |-
                  Stores the ingress host domain resolved at runtime; either from a user override or automatically computed from
                  the default ingress controller.
                type: string
              usedServerConfig:
                properties:
                  alarmsServerUsedConfig:
                    items:
                      type: string
                    type: array
                  artifactsServerUsedConfig:
                    items:
                      type: string
                    type: array
                  clusterServerUsedConfig:
                    items:
                      type: string
                    type: array
                  provisioningServerUsedConfig:
                    items:
                      type: string
                    type: array
                  resourceServerUsedConfig:
                    items:
                      type: string
                    type: array
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
