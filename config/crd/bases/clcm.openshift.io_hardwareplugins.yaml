---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: hardwareplugins.clcm.openshift.io
spec:
  group: clcm.openshift.io
  names:
    kind: HardwarePlugin
    listKind: HardwarePluginList
    plural: hardwareplugins
    shortNames:
    - hwplugin
    singular: hardwareplugin
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: HardwarePlugin is the Schema for the hardwareplugins API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: HardwarePluginSpec defines the desired state of HardwarePlugin
            properties:
              apiRoot:
                description: ApiRoot is the root URL for the Hardware Plugin.
                minLength: 1
                type: string
              authClientConfig:
                description: AuthClientConfig defines the configurable client attributes
                  required to access the OAuth2 authorization server
                properties:
                  basicAuthSecret:
                    description: |-
                      BasicAuthSecret represents the name of a secret (in the current namespace) containing the username
                      and password for Basic authentication. The secret is expected to contain 'username' and 'password' keys.
                      This field is required when Type is set to "Basic".
                    type: string
                  oauthConfig:
                    description: |-
                      OAuthConfig holds the configuration for OAuth2-based authentication, including the authorization server
                      URL, token endpoint, and client credentials. This field is required when Type is set to "OAuth".
                    properties:
                      clientSecretName:
                        description: |-
                          ClientSecretName represents the name of a secret (in the current namespace) which contains the client-id and
                          client-secret values used by the OAuth client.
                        type: string
                      scopes:
                        description: |-
                          Scopes represents the OAuth scope values to request when acquiring a token.  Typically, this should be set to
                          "openid" in addition to any other scopes that the SMO specifically requires (e.g., "roles", "groups", etc...) to
                          authorize our requests
                        items:
                          type: string
                        type: array
                      tokenEndpoint:
                        description: |-
                          TokenEndpoint represents the API endpoint used to acquire a token (e.g., /protocol/openid-connect/token) which
                          will be appended to the base URL to form the full URL
                        type: string
                      url:
                        description: URL represents the base URL of the authorization
                          server. (e.g., https://keycloak.example.com/realms/oran)
                        type: string
                    required:
                    - clientSecretName
                    - scopes
                    - tokenEndpoint
                    - url
                    type: object
                  tlsConfig:
                    description: |-
                      TLSConfig specifies the TLS configuration for secure communication, including the certificate and private
                      key. This field is optional and can be used with any authentication type to enable TLS for the connection.
                    properties:
                      secretName:
                        description: |-
                          SecretName specifies the name of a secret (in the current namespace) containing an X.509 certificate and
                          private key. The secret must include 'tls.key' and 'tls.crt' keys. If the certificate is signed by
                          intermediate CA(s), the full certificate chain should be included in the certificate file, with the
                          leaf certificate first and the root CA last. The certificate's Common Name (CN) or Subject Alternative
                          Name (SAN) should align with the service's fully qualified domain name to support both ingress and
                          outgoing client certificate use cases.
                        type: string
                    type: object
                  type:
                    description: Type specifies the authentication type to be used
                      (e.g., ServiceAccount, Basic, or OAuth).
                    enum:
                    - ServiceAccount
                    - Basic
                    - OAuth
                    type: string
                required:
                - type
                type: object
              caBundleName:
                description: |-
                  CaBundleName references a config map that contains a set of custom CA certificates to be used when communicating
                  with any outside HardwarePlugin server that has its TLS certificate signed by a non-public CA certificate.
                  The config map is expected to contain a single file called 'ca-bundle.crt' containing all trusted CA certificates
                  in PEM format.
                type: string
            required:
            - apiRoot
            type: object
          status:
            description: HardwarePluginStatus defines the observed state of HardwarePlugin
            properties:
              conditions:
                description: Conditions describe the state of the UpdateService resource.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
