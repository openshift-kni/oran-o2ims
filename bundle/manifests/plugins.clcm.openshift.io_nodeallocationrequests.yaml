apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  creationTimestamp: null
  name: nodeallocationrequests.plugins.clcm.openshift.io
spec:
  group: plugins.clcm.openshift.io
  names:
    kind: NodeAllocationRequest
    listKind: NodeAllocationRequestList
    plural: nodeallocationrequests
    shortNames:
    - orannar
    singular: nodeallocationrequest
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.hardwarePluginRef
      name: HardwarePlugin
      type: string
    - jsonPath: .spec.clusterId
      name: Cluster ID
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.conditions[-1:].reason
      name: State
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: NodeAllocationRequest is the schema for an allocation request
          of nodes
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: NodeAllocationRequestSpec describes a group of nodes to allocate
            properties:
              bootInterfaceLabel:
                description: BootInterfaceLabel is the label of the boot interface.
                minLength: 1
                type: string
              callback:
                description: |-
                  Callback defines the configuration for receiving notifications when the NodeAllocationRequest
                  operation is completed or fails. If not specified, no callback will be made.
                properties:
                  authClientConfig:
                    description: |-
                      AuthClientConfig defines the authentication configuration for the callback requests.
                      This allows configuring how the plugin should authenticate when making callback requests
                      to the specified CallbackURL.
                    properties:
                      basicAuthSecret:
                        description: |-
                          BasicAuthSecret represents the name of a secret (in the current namespace) containing the username
                          and password for Basic authentication. The secret is expected to contain 'username' and 'password' keys.
                          This field is required when Type is set to "Basic".
                        type: string
                      oauthConfig:
                        description: |-
                          OAuthConfig holds the configuration for OAuth2-based authentication, including the authorization server
                          URL, token endpoint, and client credentials. This field is required when Type is set to "OAuth".
                        properties:
                          clientSecretName:
                            description: |-
                              ClientSecretName represents the name of a secret (in the current namespace) which contains the client-id and
                              client-secret values used by the OAuth client.
                            type: string
                          scopes:
                            description: |-
                              Scopes represents the OAuth scope values to request when acquiring a token.  Typically, this should be set to
                              "openid" in addition to any other scopes that the SMO specifically requires (e.g., "roles", "groups", etc...) to
                              authorize our requests
                            items:
                              type: string
                            type: array
                          tokenEndpoint:
                            description: |-
                              TokenEndpoint represents the API endpoint used to acquire a token (e.g., /protocol/openid-connect/token) which
                              will be appended to the base URL to form the full URL
                            type: string
                          url:
                            description: URL represents the base URL of the authorization
                              server. (e.g., https://keycloak.example.com/realms/oran)
                            type: string
                        required:
                        - clientSecretName
                        - scopes
                        - tokenEndpoint
                        - url
                        type: object
                      tlsConfig:
                        description: |-
                          TLSConfig specifies the TLS configuration for secure communication, including the certificate and private
                          key. This field is optional and can be used with any authentication type to enable TLS for the connection.
                        properties:
                          secretName:
                            description: |-
                              SecretName specifies the name of a secret (in the current namespace) containing an X.509 certificate and
                              private key. The secret must include 'tls.key' and 'tls.crt' keys. If the certificate is signed by
                              intermediate CA(s), the full certificate chain should be included in the certificate file, with the
                              leaf certificate first and the root CA last. The certificate's Common Name (CN) or Subject Alternative
                              Name (SAN) should align with the service's fully qualified domain name to support both ingress and
                              outgoing client certificate use cases.
                            type: string
                        type: object
                      type:
                        description: Type specifies the authentication type to be
                          used (e.g., ServiceAccount, Basic, or OAuth).
                        enum:
                        - ServiceAccount
                        - Basic
                        - OAuth
                        type: string
                    required:
                    - type
                    type: object
                  caBundleName:
                    description: |-
                      CaBundleName references a config map that contains a set of custom CA certificates
                      to use when verifying the certificate of the callback URL server. The config map
                      must contain a key named 'ca-bundle.crt' which contains one or more CA certificates
                      in PEM format.
                    type: string
                  callbackURL:
                    description: |-
                      CallbackURL is the URL to call when the NodeAllocationRequest operation is completed or fails.
                      The callback will be made as a POST request with CallbackPayload in the request body.
                    type: string
                required:
                - callbackURL
                type: object
              clusterId:
                description: |-
                  ClusterID is the identifier of the O-Cloud that generated this request. The hardware
                  manager may want to use this to tag the nodes in its database, and to generate
                  statistics.
                type: string
              configTransactionId:
                format: int64
                type: integer
              extensions:
                additionalProperties:
                  type: string
                type: object
              hardwarePluginRef:
                description: HardwarePluginRef is the name of the HardwarePlugin.
                type: string
              location:
                description: Location
                type: string
              nodeGroup:
                items:
                  properties:
                    nodeGroupData:
                      description: NodeGroupData provides the necessary information
                        for populating a node allocation request
                      properties:
                        hwProfile:
                          minLength: 1
                          type: string
                        name:
                          minLength: 1
                          type: string
                        resourcePoolId:
                          description: ResourcePoolId is the identifier for the Resource
                            Pool in the hardware manager instance.
                          type: string
                        resourceSelector:
                          additionalProperties:
                            type: string
                          type: object
                        role:
                          enum:
                          - master
                          - worker
                          type: string
                      required:
                      - hwProfile
                      - name
                      - role
                      type: object
                    size:
                      type: integer
                  required:
                  - nodeGroupData
                  - size
                  type: object
                type: array
              site:
                description: Site
                type: string
            required:
            - bootInterfaceLabel
            - clusterId
            - configTransactionId
            - nodeGroup
            - site
            type: object
          status:
            description: |-
              NodeAllocationRequestStatus describes the observed state of a request to allocate and prepare
              a node that will eventually be part of a deployment manager.
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of an NodeAllocationRequest's state.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              hwMgrPlugin:
                description: GenerationStatus represents the observed generation for
                  an operator.
                properties:
                  observedGeneration:
                    format: int64
                    type: integer
                type: object
              observedConfigTransactionId:
                format: int64
                type: integer
              properties:
                description: Properties represent the node properties in the pool
                properties:
                  nodeNames:
                    items:
                      type: string
                    type: array
                type: object
              selectedGroups:
                additionalProperties:
                  type: string
                type: object
            required:
            - observedConfigTransactionId
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
