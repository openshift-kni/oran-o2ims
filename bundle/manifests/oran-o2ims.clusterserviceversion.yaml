apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "o2ims.oran.openshift.io/v1alpha1",
          "kind": "ClusterRequest",
          "metadata": {
            "labels": {
              "app.kubernetes.io/created-by": "oran-o2ims",
              "app.kubernetes.io/instance": "clusterrequest-sample",
              "app.kubernetes.io/managed-by": "kustomize",
              "app.kubernetes.io/name": "clusterrequest",
              "app.kubernetes.io/part-of": "oran-o2ims"
            },
            "name": "clusterrequest-sample"
          },
          "spec": {
            "clusterTemplateInput": {
              "clusterInstanceInput": {
                "additionalNTPSources": [
                  "NTP.server1",
                  "1.1.1.1"
                ],
                "apiVIPs": [
                  "192.0.2.2"
                ],
                "baseDomain": "example.com",
                "clusterName": "site-sno-du-1",
                "extraAnnotations": {
                  "AgentClusterInstall": {
                    "extra-annotation-key": "extra-annotation-value"
                  }
                },
                "extraLabels": {
                  "AgentClusterInstall": {
                    "extra-label-key": "extra-label-value"
                  },
                  "ManagedCluster": {
                    "cluster-version": "v4.16",
                    "clustertemplate-a-policy": "v1"
                  }
                },
                "ingressVIPs": [
                  "192.0.2.3"
                ],
                "machineNetwork": [
                  {
                    "cidr": "192.0.2.0/24"
                  }
                ],
                "nodes": [
                  {
                    "bmcAddress": "idrac-virtualmedia+https://10.16.231.87/redfish/v1/Systems/System.Embedded.1",
                    "bmcCredentialsName": {
                      "name": "node1-bmc-secret"
                    },
                    "bootMACAddress": "00:00:00:01:20:30",
                    "bootMode": "UEFI",
                    "extraAnnotations": {
                      "BareMetalHost": {
                        "extra-annotation-key": "extra-annotation-value"
                      }
                    },
                    "extraLabels": {
                      "BareMetalHost": {
                        "extra-label-key": "extra-label-value"
                      }
                    },
                    "hostName": "node1.baseDomain.com",
                    "nodeLabels": {
                      "node-role.kubernetes.io/infra": "",
                      "node-role.kubernetes.io/master": ""
                    },
                    "nodeNetwork": {
                      "config": {
                        "dns-resolver": {
                          "config": {
                            "server": [
                              "192.0.2.22"
                            ]
                          }
                        },
                        "interfaces": [
                          {
                            "ipv4": {
                              "address": [
                                {
                                  "ip": "192.0.2.10",
                                  "prefix-length": 24
                                },
                                {
                                  "ip": "192.0.2.11",
                                  "prefix-length": 24
                                },
                                {
                                  "ip": "192.0.2.12",
                                  "prefix-length": 24
                                }
                              ],
                              "dhcp": false,
                              "enabled": true
                            },
                            "ipv6": {
                              "address": [
                                {
                                  "ip": "2620:52:0:10e7:e42:a1ff:fe8a:601",
                                  "prefix-length": 64
                                },
                                {
                                  "ip": "2620:52:0:10e7:e42:a1ff:fe8a:602",
                                  "prefix-length": 64
                                },
                                {
                                  "ip": "2620:52:0:10e7:e42:a1ff:fe8a:603",
                                  "prefix-length": 64
                                }
                              ],
                              "dhcp": false,
                              "enabled": true
                            },
                            "name": "eno1",
                            "type": "ethernet"
                          },
                          {
                            "ipv6": {
                              "address": [
                                {
                                  "ip": "2620:52:0:1302::100"
                                }
                              ],
                              "enabled": true,
                              "link-aggregation": {
                                "mode": "balance-rr",
                                "options": {
                                  "miimon": "140"
                                },
                                "slaves": [
                                  "eth0",
                                  "eth1"
                                ]
                              },
                              "prefix-length": 64
                            },
                            "name": "bond99",
                            "state": "up",
                            "type": "bond"
                          }
                        ],
                        "routes": {
                          "config": [
                            {
                              "destination": "0.0.0.0/0",
                              "next-hop-address": "192.0.2.254",
                              "next-hop-interface": "eno1",
                              "table-id": 254
                            }
                          ]
                        }
                      },
                      "interfaces": [
                        {
                          "macAddress": "00:00:00:01:20:30",
                          "name": "eno1"
                        },
                        {
                          "macAddress": "02:00:00:80:12:14",
                          "name": "eth0"
                        },
                        {
                          "macAddress": "02:00:00:80:12:15",
                          "name": "eth1"
                        }
                      ]
                    }
                  }
                ],
                "serviceNetwork": [
                  {
                    "cidr": "172.30.0.0/16"
                  }
                ],
                "sshPublicKey": "ssh-rsa"
              },
              "policyTemplateInput": {
                "sriov-network-vlan-1": "114",
                "sriov-network-vlan-2": "111"
              }
            },
            "clusterTemplateRef": "clustertemplate-sample",
            "site": "local",
            "timeout": {
              "clusterProvisioning": 80,
              "configuration": 40,
              "hardwareProvisioning": 60
            }
          }
        },
        {
          "apiVersion": "o2ims.oran.openshift.io/v1alpha1",
          "kind": "ClusterTemplate",
          "metadata": {
            "labels": {
              "app.kubernetes.io/created-by": "oran-o2ims",
              "app.kubernetes.io/instance": "clustertemplate-sample",
              "app.kubernetes.io/managed-by": "kustomize",
              "app.kubernetes.io/name": "clustertemplate",
              "app.kubernetes.io/part-of": "oran-o2ims"
            },
            "name": "clustertemplate-sample"
          },
          "spec": {
            "inputDataSchema": {
              "clusterInstanceSchema": {
                "description": "ClusterInstanceSpec defines the params that are allowed in the ClusterRequest spec.clusterInstanceInput",
                "properties": {
                  "additionalNTPSources": {
                    "description": "AdditionalNTPSources is a list of NTP sources (hostname or IP) to be added to all cluster hosts. They are added to any NTP sources that were configured through other means.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "apiVIPs": {
                    "description": "APIVIPs are the virtual IPs used to reach the OpenShift cluster's API. Enter one IP address for single-stack clusters, or up to two for dual-stack clusters (at most one IP address per IP stack used). The order of stacks should be the same as order of subnets in Cluster Networks, Service Networks, and Machine Networks.",
                    "items": {
                      "type": "string"
                    },
                    "maxItems": 2,
                    "type": "array"
                  },
                  "baseDomain": {
                    "description": "BaseDomain is the base domain to use for the deployed cluster.",
                    "type": "string"
                  },
                  "clusterName": {
                    "description": "ClusterName is the name of the cluster.",
                    "type": "string"
                  },
                  "extraAnnotations": {
                    "additionalProperties": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "type": "object"
                    },
                    "description": "Additional cluster-wide annotations to be applied to the rendered templates",
                    "type": "object"
                  },
                  "extraLabels": {
                    "additionalProperties": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "type": "object"
                    },
                    "description": "Additional cluster-wide labels to be applied to the rendered templates",
                    "type": "object"
                  },
                  "ingressVIPs": {
                    "description": "IngressVIPs are the virtual IPs used for cluster ingress traffic. Enter one IP address for single-stack clusters, or up to two for dual-stack clusters (at most one IP address per IP stack used). The order of stacks should be the same as order of subnets in Cluster Networks, Service Networks, and Machine Networks.",
                    "items": {
                      "type": "string"
                    },
                    "maxItems": 2,
                    "type": "array"
                  },
                  "machineNetwork": {
                    "description": "MachineNetwork is the list of IP address pools for machines.",
                    "items": {
                      "description": "MachineNetworkEntry is a single IP address block for node IP blocks.",
                      "properties": {
                        "cidr": {
                          "description": "CIDR is the IP block address pool for machines within the cluster.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "cidr"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "nodes": {
                    "items": {
                      "description": "NodeSpec",
                      "properties": {
                        "bmcAddress": {
                          "description": "(workaround)BmcAddress holds the URL for accessing the controller on the network.",
                          "type": "string"
                        },
                        "bmcCredentialsDetails": {
                          "description": "A workaround to provide bmc creds through ClusterRequest",
                          "properties": {
                            "password": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            }
                          }
                        },
                        "bmcCredentialsName": {
                          "description": "(workaround)BmcCredentialsName is the name of the secret containing the BMC credentials (requires keys \"username\" and \"password\").",
                          "properties": {
                            "name": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object"
                        },
                        "bootMACAddress": {
                          "description": "(workaround)Which MAC address will PXE boot? This is optional for some types, but required for libvirt VMs driven by vbmc.",
                          "pattern": "[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}",
                          "type": "string"
                        },
                        "extraAnnotations": {
                          "additionalProperties": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "type": "object"
                          },
                          "description": "Additional node-level annotations to be applied to the rendered templates",
                          "type": "object"
                        },
                        "extraLabels": {
                          "additionalProperties": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "type": "object"
                          },
                          "description": "Additional node-level labels to be applied to the rendered templates",
                          "type": "object"
                        },
                        "hostName": {
                          "description": "Hostname is the desired hostname for the host",
                          "type": "string"
                        },
                        "nodeLabels": {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "NodeLabels allows the specification of custom roles for your nodes in your managed clusters. These are additional roles are not used by any OpenShift Container Platform components, only by the user. When you add a custom role, it can be associated with a custom machine config pool that references a specific configuration for that role. Adding custom labels or roles during installation makes the deployment process more effective and prevents the need for additional reboots after the installation is complete.",
                          "type": "object"
                        },
                        "nodeNetwork": {
                          "description": "NodeNetwork is a set of configurations pertaining to the network settings for the node.",
                          "properties": {
                            "config": {
                              "description": "yaml that can be processed by nmstate, using custom marshaling/unmarshaling that will allow to populate nmstate config as plain yaml.",
                              "type": "object",
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "interfaces": {
                              "description": "Interfaces is an array of interface objects containing the name and MAC address for interfaces that are referenced in the raw nmstate config YAML. Interfaces listed here will be automatically renamed in the nmstate config YAML to match the real device name that is observed to have the corresponding MAC address. At least one interface must be listed so that it can be used to identify the correct host, which is done by matching any MAC address in this list to any MAC address observed on the host.",
                              "items": {
                                "properties": {
                                  "macAddress": {
                                    "description": "(workaround)mac address present on the host.",
                                    "pattern": "^([0-9A-Fa-f]{2}[:]){5}([0-9A-Fa-f]{2})$",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "nic name used in the yaml, which relates 1:1 to the mac address. Name in REST API: logicalNICName",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "required": [
                        "hostName"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "serviceNetwork": {
                    "description": "ServiceNetwork is the list of IP address pools for services.",
                    "items": {
                      "description": "ServiceNetworkEntry is a single IP address block for node IP blocks.",
                      "properties": {
                        "cidr": {
                          "description": "CIDR is the IP block address pool for machines within the cluster.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "cidr"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "sshPublicKey": {
                    "description": "SSHPublicKey is the public Secure Shell (SSH) key to provide access to instances. This key will be added to the host to allow ssh access",
                    "type": "string"
                  }
                },
                "required": [
                  "clusterName",
                  "nodes"
                ],
                "type": "object"
              },
              "policyTemplateSchema": {
                "description": "policyTemplateSchema defines the available parameters for cluster configuration",
                "policyTemplateSchema": null,
                "properties": {
                  "cpu-isolated": {
                    "type": "string"
                  },
                  "sriov-network-pfNames-1": {
                    "type": "string"
                  },
                  "sriov-network-pfNames-2": {
                    "type": "string"
                  },
                  "sriov-network-vlan-1": {
                    "type": "string"
                  },
                  "sriov-network-vlan-2": {
                    "type": "string"
                  }
                }
              }
            },
            "templates": {
              "clusterInstanceDefaults": "clusterinstance-defaults-v1",
              "hwTemplate": "hwtemplate-configmap-v1",
              "policyTemplateDefaults": "policytemplate-defaults-v1"
            }
          }
        },
        {
          "apiVersion": "o2ims.oran.openshift.io/v1alpha1",
          "kind": "Inventory",
          "metadata": {
            "labels": {
              "app.kubernetes.io/created-by": "oran-o2ims",
              "app.kubernetes.io/instance": "inventory-sample",
              "app.kubernetes.io/managed-by": "kustomize",
              "app.kubernetes.io/name": "inventory",
              "app.kubernetes.io/part-of": "oran-o2ims"
            },
            "name": "sample",
            "namespace": "oran-o2ims"
          },
          "spec": {
            "cloudId": "f7fd171f-57b5-4a17-b176-9a73bf6064a4",
            "ingressHost": "o2ims.apps.global-hub.karmalabs.corp",
            "resourceServerConfig": {
              "enabled": false
            }
          }
        }
      ]
    capabilities: Basic Install
    containerImage: quay.io/openshift-kni/oran-o2ims-operator
    description: The O-RAN O2IMS operator provides an implementation of the O-RAN
      O2 IMS API on top of OpenShift and ACM.
    features.operators.openshift.io/cnf: "false"
    features.operators.openshift.io/cni: "false"
    features.operators.openshift.io/csi: "false"
    features.operators.openshift.io/disconnected: "true"
    features.operators.openshift.io/fips-compliant: "true"
    features.operators.openshift.io/proxy-aware: "false"
    features.operators.openshift.io/tls-profiles: "false"
    features.operators.openshift.io/token-auth-aws: "false"
    features.operators.openshift.io/token-auth-azure: "false"
    features.operators.openshift.io/token-auth-gcp: "false"
    olm.skipRange: '>=4.16.0 <4.18'
    operators.openshift.io/infrastructure-features: '["disconnected"]'
    operators.operatorframework.io/builder: operator-sdk-v1.36.1
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v4
    provider: Red Hat
    repository: https://github.com/openshift-kni/oran-o2ims
    support: Red Hat
  labels:
    operatorframework.io/arch.amd64: supported
  name: oran-o2ims.v4.16.0
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: ClusterRequest is the Schema for the clusterrequests API
      displayName: ORAN O2IMS Cluster Request
      kind: ClusterRequest
      name: clusterrequests.o2ims.oran.openshift.io
      resources:
      - kind: ClusterInstance
        name: ""
        version: siteconfig.open-cluster-management.io/v1alpha1
      - kind: Namespace
        name: ""
        version: v1
      specDescriptors:
      - displayName: Cluster Template Input
        path: clusterTemplateInput
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - displayName: Cluster Template Reference
        path: clusterTemplateRef
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Location
        displayName: Location
        path: location
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Site
        displayName: Site
        path: site
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - displayName: Timeout
        path: timeout
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      version: v1alpha1
    - description: ClusterTemplate is the Schema for the clustertemplates API
      displayName: ORAN O2IMS Cluster Template
      kind: ClusterTemplate
      name: clustertemplates.o2ims.oran.openshift.io
      resources:
      - kind: ConfigMap
        name: ""
        version: v1
      specDescriptors:
      - description: InputDataSchema encapsulates all the schemas required for ClusterTemplate.
        displayName: Input Data Schema
        path: inputDataSchema
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Templates defines the references to the templates required for
          ClusterTemplate.
        displayName: Templates
        path: templates
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      version: v1alpha1
    - description: Inventory is the Schema for the Inventory API
      displayName: ORAN O2IMS Inventory
      kind: Inventory
      name: inventories.o2ims.oran.openshift.io
      resources:
      - kind: Deployment
        name: ""
        version: apps/v1
      specDescriptors:
      - description: AlarmSubscriptionServerConfig contains the configuration for
          the alarm server.
        displayName: Alarm Subscription Server Configuration
        path: alarmSubscriptionServerConfig
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: CloudId is used to correlate the SMO inventory record with the
          deployed cloud instance.
        displayName: Cloud Id
        path: cloudId
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - displayName: Deployment Manager Server Configuration
        path: deploymentManagerServerConfig
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: |-
          Image is the full reference of the container image that contains the binary. This is
          optional and the default will be the value passed to the `--image` command line flag of
          the controller manager.
        displayName: Image
        path: image
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: IngressHost defines the FQDN for the IMS endpoints.
        displayName: Ingress Host
        path: ingressHost
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - displayName: Metadata Server Configuration
        path: metadataServerConfig
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: ResourceServerConfig contains the configuration for the resource
          server.
        displayName: Resource Server Configuration
        path: resourceServerConfig
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - displayName: Backend Token
        path: resourceServerConfig.backendToken
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - displayName: Backend URL
        path: resourceServerConfig.backendURL
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: This field allows the addition of extra O-Cloud information for
          the resource server.
        displayName: Extensions
        path: resourceServerConfig.extensions
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      statusDescriptors:
      - description: |-
          INSERT ADDITIONAL STATUS FIELD - define observed state of cluster
          Important: Run "make" to regenerate code after modifying this file
        displayName: Deployments Status
        path: deploymentStatus
      - displayName: Conditions
        path: deploymentStatus.conditions
      - displayName: Deployment Server Status
        path: deploymentStatus.deploymentServerStatus
      - displayName: Metadata Server Status
        path: deploymentStatus.metadataServerStatus
      - displayName: Resource Server Status
        path: deploymentStatus.resourceServerStatus
      - displayName: Deployments Status
        path: usedServerConfig
      version: v1alpha1
    - description: NodePool is the schema for an allocation request of nodes
      displayName: ORAN O2IMS Cluster Request
      kind: NodePool
      name: nodepools.o2ims-hardwaremanagement.oran.openshift.io
      resources:
      - kind: Namespace
        name: ""
        version: v1
      specDescriptors:
      - description: |-
          CloudID is the identifier of the O-Cloud that generated this request. The hardware
          manager may want to use this to tag the nodes in its database, and to generate
          statistics.
        displayName: Cloud ID
        path: cloudID
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Location
        displayName: Location
        path: location
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Site
        displayName: Site
        path: site
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      version: v1alpha1
    - description: Node is the schema for an allocated node
      displayName: ORAN O2IMS Cluster Request
      kind: Node
      name: nodes.o2ims-hardwaremanagement.oran.openshift.io
      resources:
      - kind: Namespace
        name: ""
        version: v1
      specDescriptors:
      - description: GroupName
        displayName: Group Name
        path: groupName
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: HwProfile
        displayName: Hardware Profile
        path: hwProfile
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: NodePool
        displayName: Node Pool
        path: nodePool
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      version: v1alpha1
  description: |
    # O-RAN O2IMS operator
    The O-RAN O2IMS operator provides an implementation of the O-RAN O2 IMS API on top of OpenShift and ACM.

    ## Where to find more information
    You can find additional guidance in the [oran-o2ims repository](https://github.com/openshift-kni/oran-o2ims).
  displayName: ORAN O2IMS Operator
  icon:
  - base64data: PHN2ZyBpZD0iTGF5ZXJfMSIgZGF0YS1uYW1lPSJMYXllciAxIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAxOTIgMTQ1Ij48ZGVmcz48c3R5bGU+LmNscy0xe2ZpbGw6I2UwMDt9PC9zdHlsZT48L2RlZnM+PHRpdGxlPlJlZEhhdC1Mb2dvLUhhdC1Db2xvcjwvdGl0bGU+PHBhdGggZD0iTTE1Ny43Nyw2Mi42MWExNCwxNCwwLDAsMSwuMzEsMy40MmMwLDE0Ljg4LTE4LjEsMTcuNDYtMzAuNjEsMTcuNDZDNzguODMsODMuNDksNDIuNTMsNTMuMjYsNDIuNTMsNDRhNi40Myw2LjQzLDAsMCwxLC4yMi0xLjk0bC0zLjY2LDkuMDZhMTguNDUsMTguNDUsMCwwLDAtMS41MSw3LjMzYzAsMTguMTEsNDEsNDUuNDgsODcuNzQsNDUuNDgsMjAuNjksMCwzNi40My03Ljc2LDM2LjQzLTIxLjc3LDAtMS4wOCwwLTEuOTQtMS43My0xMC4xM1oiLz48cGF0aCBjbGFzcz0iY2xzLTEiIGQ9Ik0xMjcuNDcsODMuNDljMTIuNTEsMCwzMC42MS0yLjU4LDMwLjYxLTE3LjQ2YTE0LDE0LDAsMCwwLS4zMS0zLjQybC03LjQ1LTMyLjM2Yy0xLjcyLTcuMTItMy4yMy0xMC4zNS0xNS43My0xNi42QzEyNC44OSw4LjY5LDEwMy43Ni41LDk3LjUxLjUsOTEuNjkuNSw5MCw4LDgzLjA2LDhjLTYuNjgsMC0xMS42NC01LjYtMTcuODktNS42LTYsMC05LjkxLDQuMDktMTIuOTMsMTIuNSwwLDAtOC40MSwyMy43Mi05LjQ5LDI3LjE2QTYuNDMsNi40MywwLDAsMCw0Mi41Myw0NGMwLDkuMjIsMzYuMywzOS40NSw4NC45NCwzOS40NU0xNjAsNzIuMDdjMS43Myw4LjE5LDEuNzMsOS4wNSwxLjczLDEwLjEzLDAsMTQtMTUuNzQsMjEuNzctMzYuNDMsMjEuNzdDNzguNTQsMTA0LDM3LjU4LDc2LjYsMzcuNTgsNTguNDlhMTguNDUsMTguNDUsMCwwLDEsMS41MS03LjMzQzIyLjI3LDUyLC41LDU1LC41LDc0LjIyYzAsMzEuNDgsNzQuNTksNzAuMjgsMTMzLjY1LDcwLjI4LDQ1LjI4LDAsNTYuNy0yMC40OCw1Ni43LTM2LjY1LDAtMTIuNzItMTEtMjcuMTYtMzAuODMtMzUuNzgiLz48L3N2Zz4=
    mediatype: image/svg+xml
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - serviceaccounts
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - services
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - deployments
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        - apiGroups:
          - cluster.open-cluster-management.io
          resources:
          - managedclusters
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - internal.open-cluster-management.io
          resources:
          - managedclusterinfos
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - networking.k8s.io
          resources:
          - ingresses
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - o2ims-hardwaremanagement.oran.openshift.io
          resources:
          - nodepools
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - o2ims-hardwaremanagement.oran.openshift.io
          resources:
          - nodepools/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - o2ims-hardwaremanagement.oran.openshift.io
          resources:
          - nodes
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - o2ims-hardwaremanagement.oran.openshift.io
          resources:
          - nodes/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - o2ims.oran.openshift.io
          resources:
          - clusterrequests
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - o2ims.oran.openshift.io
          resources:
          - clusterrequests/finalizers
          verbs:
          - update
        - apiGroups:
          - o2ims.oran.openshift.io
          resources:
          - clusterrequests/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - o2ims.oran.openshift.io
          resources:
          - clustertemplates
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - o2ims.oran.openshift.io
          resources:
          - clustertemplates/finalizers
          verbs:
          - update
        - apiGroups:
          - o2ims.oran.openshift.io
          resources:
          - clustertemplates/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - o2ims.oran.openshift.io
          resources:
          - inventories
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - o2ims.oran.openshift.io
          resources:
          - inventories/finalizers
          verbs:
          - update
        - apiGroups:
          - o2ims.oran.openshift.io
          resources:
          - inventories/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - policy.open-cluster-management.io
          resources:
          - policies
          verbs:
          - list
          - watch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterroles
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - siteconfig.open-cluster-management.io
          resources:
          - clusterinstances
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: oran-o2ims-controller-manager
      deployments:
      - label:
          app.kubernetes.io/component: manager
          app.kubernetes.io/created-by: oran-o2ims
          app.kubernetes.io/instance: controller-manager
          app.kubernetes.io/managed-by: kustomize
          app.kubernetes.io/name: deployment
          app.kubernetes.io/part-of: oran-o2ims
          control-plane: controller-manager
        name: oran-o2ims-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: manager
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=0
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.15.0
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                  protocol: TCP
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 5m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                command:
                - /usr/bin/oran-o2ims
                - start
                - controller-manager
                - --leader-elect
                env:
                - name: IMAGE
                  value: quay.io/openshift-kni/oran-o2ims-operator:4.16.0
                - name: KUBE_RBAC_PROXY_IMAGE
                  value: gcr.io/kubebuilder/kube-rbac-proxy:v0.15.0
                image: quay.io/openshift-kni/oran-o2ims-operator:4.16.0
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 500m
                    memory: 256Mi
                  requests:
                    cpu: 10m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              securityContext:
                runAsNonRoot: true
              serviceAccountName: oran-o2ims-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: oran-o2ims-controller-manager
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - ORAN
  - O2IMS
  links:
  - name: Oran O2ims
    url: https://oran-o2ims.domain
  maintainers:
  - email: jhernand@redhat.com
    name: JuanHernandez
  - email: derez@redhat.com
    name: DanielErez
  - email: imihai@redhat.com
    name: IrinaMihai
  maturity: alpha
  provider:
    name: Red Hat
  replaces: oran-o2ims.v0.0.0
  version: 4.16.0
