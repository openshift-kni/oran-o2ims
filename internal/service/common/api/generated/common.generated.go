// Package generated provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package generated

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// APIVersion Information about a version of the API.
type APIVersion struct {
	Version *string `json:"version,omitempty"`
}

// APIVersions Information about a list of versions of the API.
type APIVersions struct {
	ApiVersions *[]APIVersion `json:"apiVersions,omitempty"`
	UriPrefix   *string       `json:"uriPrefix,omitempty"`
}

// ProblemDetails defines model for ProblemDetails.
type ProblemDetails struct {
	// AdditionalAttributes Any number of additional attributes, as defined in a specification or by an implementation.
	AdditionalAttributes *map[string]string `json:"additionalAttributes,omitempty"`

	// Detail A human-readable explanation specific to this occurrence of the problem.
	Detail string `json:"detail"`

	// Instance A URI reference that identifies the specific occurrence of the problem.
	// It may yield further information if dereferenced.
	Instance *string `json:"instance,omitempty"`

	// Status The HTTP status code for this occurrence of the problem.
	Status int `json:"status"`

	// Title A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem,
	// except for purposes of localization. If type is given and other than "about:blank", this attribute shall also be provided.
	Title *string `json:"title,omitempty"`

	// Type A URI reference according to IETF RFC 3986 [3] that identifies the problem type. It is encouraged that the URI provides
	// human-readable documentation for the problem (e.g. usingHTML) when dereferenced. When this member is not present,
	// its value is assumed to be "about:blank".
	Type *string `json:"type,omitempty"`
}

// ExcludeFields defines model for excludeFields.
type ExcludeFields = string

// Fields defines model for fields.
type Fields = string

// Filter defines model for filter.
type Filter = string

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
