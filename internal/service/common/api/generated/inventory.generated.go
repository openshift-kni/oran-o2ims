// Package generated provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package generated

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// APIVersion Information about a version of the API.
type APIVersion struct {
	Version *string `json:"version,omitempty"`
}

// APIVersions Information about a list of versions of the API.
type APIVersions struct {
	ApiVersions *[]APIVersion `json:"apiVersions,omitempty"`
	UriPrefix   *string       `json:"uriPrefix,omitempty"`
}

// ExcludeFields defines model for excludeFields.
type ExcludeFields = string

// Fields defines model for fields.
type Fields = string

// Filter defines model for filter.
type Filter = string

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/8RX3W7cNhN9lQG/D0gTyLuJe7dFLoLAAQzUjQsn7UVVVLQ0WrGlhjJ/bC9iv3sxFPXj",
	"9a7XTQrUV5Y0PDxz5pAz+0WUpu0MIXknVl9EJ61s0aONT3hb6lDhB4W6ii8qdKVVnVeGxEq8N20rwSEv",
	"8liBVs6DqaHmeLBYo0Uq0YE3kKCgtqYF3yBYdEH7RU45nciy2V4EyoFML0m2mIGxwJtdhfh53IY/uhmJ",
	"yw04LV2DbgEfjM0Jb2XbaczmLJhAUZpA3m4KcOGyxzJ1/wVvPZJThlzR77JimkVRMFpE+CO+dm+nyGWC",
	"S3E5/doggW+Ug1FUUI5eeAgOKyCTErhRWsMlDtyqKEkvOaiEEJXdDgS8RgIVOW9AWv7SaVUqrzegKAUF",
	"p2jNITkVPeliIrTISWQiKSRWIir9OCeRCcUFvwoYHzhMrMRDLUQmXNlgK9koftNxhPNW0Vrc32ei/hdM",
	"lJLqZfmPLLRG35uEVyV7gKTqGzyVvLRH/OcaSmodd+rRRrdY9MFStNU3lPqZJdYe7eMSX6C0ZQOlVR6t",
	"krFg7w15qciBIeS6tMYiuIeB2VZNsFWl0YbcAmK9t8JjvXPyodMIZY/P3pcEpkMrvbHZaIjJJVy7OYlr",
	"qQNX/lOD4zooJeV0ycGboaK10drc8Aa9BC4W9A4+Dmvu4AxlZPA1f3c53R2Nf7N/v+KPsdib5AtGhjPp",
	"ywZdujuSIuVQEX4VRdjLCwq8Kvqn3VjKAV4FqfnAPAHXY639Iay1Rclu942kfXgDFhb/AMvYnTx7LEWH",
	"eEXb1NNKt1cvfTBHjc49meAM61COE9Z2ghN2j0XJFHuwKoMOyPjBHHu4Jaxkiv28GOmQLxJWEv9prEP6",
	"3/GJ/DSuetAZeBFfbgwww0m3Z3oyl39i6R83jpyGpSl+b/OAee8IbsfocZRSIqcqzOlws+BL9u13eLXj",
	"9s5Ofn459otPkyw8HDCwtOvQ8qw3Jpguq22ukcRVMbsATdtJiy6nssHyr7EefQXNwcO/GBjFY8V3bl/j",
	"YQMHLnSdsR7aoL3iK3y4iLdVjASG/Ucpc9rWck/fjfyUb9BCcXJRcG2LzxePBVa0U+CL7PPFy4c9OYk8",
	"nJGSJxqXDTbgDVwn4wjDgxohVpzGJYIL1ppAVbKNorVGuArGo1vk9HTe8/Ej2bnvQ1C0Gyh1cB5tsdM3",
	"sfW/mKJebOUzVmDsrHv6cPQVDx9ZnD56F7TQBueh5XMLtbH97Mn+0ehjY64UDwacUgza4b2pt8YxZlfm",
	"yuU0zxReSapebR2vsYAsEVf7mXr8sO94bZf+8DjWD6mH57GRyMTj5d5hLM5ZTw1j98PHOHG/Oz/9Ba2L",
	"09j2cHZKtbGtjBWRlyZ4kHDdBw/H+t35ac+2s3xcvcKIej1BTmm8WbxevBbZjukwvemvVHGfzVi559Ea",
	"fhqkjd0BfrJTc/yR428z6onv/e+ZUB7bGPh/i7VYif8tp5/GyyTmcqbklJK0Vm74OVh1brFWtw81WX48",
	"Vq07UlRb6bwNpQ8WT+kayRu7WV6/eY5e/EpRbR5L9fH49OwC+HeUITgzFWoXL9jz8bd8FEerEskhr08+",
	"etfJskE4jgULVouVaLzv3Gq5vLm5Wcj4eWHsepnWuuWPp+9Pfro4OTpevF40vtVRBeVjmod5iOyx8pkw",
	"HZLslFiJ75N5OukbJ1YUtL7/OwAA//9eIwwlohAAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
