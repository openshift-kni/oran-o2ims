// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go
//
// Generated by this command:
//
//	mockgen -source=interfaces.go -destination=mocks/mock_interfaces.go -package=mocks
//
// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	provisioning "github.com/openshift-kni/oran-o2ims/hwmgr-plugins/api/client/provisioning"
	gomock "go.uber.org/mock/gomock"
)

// MockHardwarePluginClientInterface is a mock of HardwarePluginClientInterface interface.
type MockHardwarePluginClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockHardwarePluginClientInterfaceMockRecorder
}

// MockHardwarePluginClientInterfaceMockRecorder is the mock recorder for MockHardwarePluginClientInterface.
type MockHardwarePluginClientInterfaceMockRecorder struct {
	mock *MockHardwarePluginClientInterface
}

// NewMockHardwarePluginClientInterface creates a new mock instance.
func NewMockHardwarePluginClientInterface(ctrl *gomock.Controller) *MockHardwarePluginClientInterface {
	mock := &MockHardwarePluginClientInterface{ctrl: ctrl}
	mock.recorder = &MockHardwarePluginClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHardwarePluginClientInterface) EXPECT() *MockHardwarePluginClientInterfaceMockRecorder {
	return m.recorder
}

// CreateNodeAllocationRequest mocks base method.
func (m *MockHardwarePluginClientInterface) CreateNodeAllocationRequest(ctx context.Context, nodeAllocationRequest provisioning.NodeAllocationRequest) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateNodeAllocationRequest", ctx, nodeAllocationRequest)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateNodeAllocationRequest indicates an expected call of CreateNodeAllocationRequest.
func (mr *MockHardwarePluginClientInterfaceMockRecorder) CreateNodeAllocationRequest(ctx, nodeAllocationRequest any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNodeAllocationRequest", reflect.TypeOf((*MockHardwarePluginClientInterface)(nil).CreateNodeAllocationRequest), ctx, nodeAllocationRequest)
}

// DeleteNodeAllocationRequest mocks base method.
func (m *MockHardwarePluginClientInterface) DeleteNodeAllocationRequest(ctx context.Context, nodeAllocationRequestID string) (string, bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteNodeAllocationRequest", ctx, nodeAllocationRequestID)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(bool)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// DeleteNodeAllocationRequest indicates an expected call of DeleteNodeAllocationRequest.
func (mr *MockHardwarePluginClientInterfaceMockRecorder) DeleteNodeAllocationRequest(ctx, nodeAllocationRequestID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteNodeAllocationRequest", reflect.TypeOf((*MockHardwarePluginClientInterface)(nil).DeleteNodeAllocationRequest), ctx, nodeAllocationRequestID)
}

// GetAllocatedNodesFromNodeAllocationRequest mocks base method.
func (m *MockHardwarePluginClientInterface) GetAllocatedNodesFromNodeAllocationRequest(ctx context.Context, nodeAllocationRequestID string) (*[]provisioning.AllocatedNode, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllocatedNodesFromNodeAllocationRequest", ctx, nodeAllocationRequestID)
	ret0, _ := ret[0].(*[]provisioning.AllocatedNode)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllocatedNodesFromNodeAllocationRequest indicates an expected call of GetAllocatedNodesFromNodeAllocationRequest.
func (mr *MockHardwarePluginClientInterfaceMockRecorder) GetAllocatedNodesFromNodeAllocationRequest(ctx, nodeAllocationRequestID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllocatedNodesFromNodeAllocationRequest", reflect.TypeOf((*MockHardwarePluginClientInterface)(nil).GetAllocatedNodesFromNodeAllocationRequest), ctx, nodeAllocationRequestID)
}

// GetHardwarePluginRef mocks base method.
func (m *MockHardwarePluginClientInterface) GetHardwarePluginRef() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHardwarePluginRef")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetHardwarePluginRef indicates an expected call of GetHardwarePluginRef.
func (mr *MockHardwarePluginClientInterfaceMockRecorder) GetHardwarePluginRef() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHardwarePluginRef", reflect.TypeOf((*MockHardwarePluginClientInterface)(nil).GetHardwarePluginRef))
}

// GetNodeAllocationRequest mocks base method.
func (m *MockHardwarePluginClientInterface) GetNodeAllocationRequest(ctx context.Context, nodeAllocationRequestID string) (*provisioning.NodeAllocationRequestResponse, bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNodeAllocationRequest", ctx, nodeAllocationRequestID)
	ret0, _ := ret[0].(*provisioning.NodeAllocationRequestResponse)
	ret1, _ := ret[1].(bool)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetNodeAllocationRequest indicates an expected call of GetNodeAllocationRequest.
func (mr *MockHardwarePluginClientInterfaceMockRecorder) GetNodeAllocationRequest(ctx, nodeAllocationRequestID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNodeAllocationRequest", reflect.TypeOf((*MockHardwarePluginClientInterface)(nil).GetNodeAllocationRequest), ctx, nodeAllocationRequestID)
}

// UpdateNodeAllocationRequest mocks base method.
func (m *MockHardwarePluginClientInterface) UpdateNodeAllocationRequest(ctx context.Context, nodeAllocationRequestID string, nodeAllocationRequest provisioning.NodeAllocationRequest) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateNodeAllocationRequest", ctx, nodeAllocationRequestID, nodeAllocationRequest)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateNodeAllocationRequest indicates an expected call of UpdateNodeAllocationRequest.
func (mr *MockHardwarePluginClientInterfaceMockRecorder) UpdateNodeAllocationRequest(ctx, nodeAllocationRequestID, nodeAllocationRequest any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateNodeAllocationRequest", reflect.TypeOf((*MockHardwarePluginClientInterface)(nil).UpdateNodeAllocationRequest), ctx, nodeAllocationRequestID, nodeAllocationRequest)
}
