#
# Copyright (c) 2023 Red Hat, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
# in compliance with the License. You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed under the License
# is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied. See the License for the specific language governing permissions and limitations under
# the License.
#

# This is an example Envoy configuration that redirects requests to the servers, so that they
# appear to be a single server. It is intended for use in development environments, together
# with the 'proxy.sh' script.

admin:
  access_log_path: /dev/null
  address:
    socket_address:
      address: 127.0.0.1
      port_value: 9001

static_resources:

  clusters:

  - name: metadata-server
    connect_timeout: 1s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: metadata-server
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 8000

  - name: deployment-manager-server
    connect_timeout: 1s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: deployment-manager-server
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 8001

  - name: resource-server
    connect_timeout: 1s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: resource-server
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 8002

  - name: alert-subscription-server
    connect_timeout: 1s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: alert-subscription-server
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 8001


  listeners:

  - name: ingress
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 9000
    filter_chains:
      filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          access_log:
          - name: envoy.access_loggers.file
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
              path: /dev/stdout
          stat_prefix: ingress
          http_filters:
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          route_config:
            name: ingress
            virtual_hosts:
            - name: all
              domains:
              - "*"
              routes:

              # Requests for the deployment manager server:
              - name: deployment-manager
                match:
                  prefix: /o2ims-infrastructureInventory/v1/deploymentManagers
                route:
                  cluster: deployment-manager-server
                  timeout: 300s

              # Requests for the resource server:
              - name: resource-manager
                match:
                  prefix: /o2ims-infrastructureInventory/v1/resourcePools
                route:
                  cluster: resource-server
                  timeout: 300s

              # Everything else goes to the metadata server, which will respond with 404 to most
              # requests:
              - name: metadata
                match:
                  prefix: /
                route:
                  cluster: metadata-server
                  timeout: 300s
